{"version":3,"file":"Button.stories-5dfaf2ee.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/node/id.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/data.mjs","../../node_modules/framer-motion/dist/es/frameloop/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/debug/record.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../src/components/framer-button/Button.anim.tsx","../../src/components/framer-button/Button.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let time = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            time = holdTime;\n        }\n        else {\n            time = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        time = Math.max(time - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            time = totalDuration;\n        }\n        let elapsed = time;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = time / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (time > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (calculatedDuration !== null) {\n            done = time >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && time <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(time);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            time = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(time);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = time;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    const safeCancel = () => {\n        sync.update(() => animation.cancel());\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.8.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.8.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.8.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","export const buttonAnim = {\r\n  init: {\r\n    scale: 1,\r\n    boxShadow: \"0 0 0rem 0rem rgba(66, 18, 161, 0)\",\r\n    outline: \"7px solid rgba(129, 75, 255, 0)\",\r\n    background: \"radial-gradient(70% 90% at 50% 100%, rgb(31, 30, 31) 0%, rgb(31, 30, 31) 100%)\",\r\n    transition: {\r\n      ease: [0.33, 1, 0.68, 1],\r\n      duration: 0.3,\r\n    },\r\n  },\r\n  anim: {\r\n    scale: 1.2,\r\n    boxShadow:\r\n      \"0 0 20rem 5rem rgba(65, 18, 161, 1), 0 2px 0 0 rgb(120, 54, 250) inset, 0 -2px 0 0 rgb(86, 4, 250) inset\",\r\n    outline: \"7px solid rgba(137, 87, 255, 0.2)\",\r\n    background: \"radial-gradient(70% 100% at 50% 110%, #b37afd 0%, rgb(77, 19, 212) 100%)\",\r\n    transition: {\r\n      type: \"spring\",\r\n      bounce: 0.25,\r\n      duration: 0.5,\r\n    },\r\n  },\r\n  tap: {\r\n    scale: 1,\r\n  },\r\n};\r\n\r\nexport const labelAnim = {\r\n  init: {\r\n    background: \"linear-gradient(90deg, rgb(117, 117, 117) 0%, rgb(80, 78, 80) 100%)\",\r\n    WebkitBackgroundClip: \"text\",\r\n    WebkitTextFillColor: \"transparent\",\r\n    transition: {\r\n      ease: [0.33, 1, 0.68, 1],\r\n      duration: 0.5,\r\n    },\r\n  },\r\n  anim: {\r\n    background: \"linear-gradient(90deg, rgb(255, 255, 255) 0%, rgb(255, 255, 255) 100%)\",\r\n    transition: {\r\n      ease: [0.33, 1, 0.68, 1],\r\n      duration: 1,\r\n    },\r\n  },\r\n};\r\n\r\nexport const svgAnim = {\r\n  init: {},\r\n  anim: {\r\n    transition: {\r\n      staggerChildren: 0.2,\r\n      delayChildren: 1,\r\n    },\r\n  },\r\n};\r\n\r\nexport const pathAnim = {\r\n  init: (i: number) => ({\r\n    fill: \"rgb(255, 255, 255)\",\r\n    opacity: (3 - i + 1) / 4,\r\n    transition: {\r\n      duration: 0.6,\r\n    },\r\n  }),\r\n  anim: (i: number) => ({\r\n    opacity: [null, 0.5, 1, i === 1 ? 1 : (3 - i + 1) / 4],\r\n    scale: [null, 0.5, 1.3, 1],\r\n    transition: {\r\n      duration: 0.6,\r\n      repeatDelay: 2.2,\r\n      repeat: Infinity,\r\n    },\r\n  }),\r\n};\r\n\r\nexport const highlightContainerAnim = {\r\n  init: {\r\n    scaleY: 1,\r\n    scaleX: 1,\r\n    transition: {\r\n      ease: \"linear\",\r\n      duration: 0.001,\r\n    },\r\n  },\r\n  anim: {\r\n    scaleY: [null, -1],\r\n    scaleX: [null, -1],\r\n    transition: {\r\n      ease: \"linear\",\r\n      duration: 0.001,\r\n      delay: 1.3,\r\n      repeatDelay: 1.3,\r\n      repeatType: \"reverse\",\r\n      repeat: Infinity,\r\n    },\r\n  },\r\n};\r\n\r\nexport const highlightAnim = {\r\n  init: {\r\n    rotateZ: -65,\r\n    transition: { ease: \"linear\", duration: 0.001 },\r\n  },\r\n  anim: {\r\n    rotateZ: [null, 65],\r\n    transition: {\r\n      ease: [0.5, 1, 0.89, 1],\r\n      duration: 1.3,\r\n      repeat: Infinity,\r\n    },\r\n  },\r\n};\r\n\r\nexport const sparkleAnim = {\r\n  RANDOM: (min: number, max: number) => Math.floor(Math.random() * (max - min + 1) + min),\r\n  init: (i: number) => ({\r\n    rotateZ: 0,\r\n    opacity: 0,\r\n    scale: 0,\r\n    top: `calc(${sparkleAnim.RANDOM(3, 9)} * 10%)`,\r\n    left: `calc(${sparkleAnim.RANDOM(3, 9)} * 10%)`,\r\n    width: `calc(${sparkleAnim.RANDOM(3, 9) / 10} * 14px)`,\r\n    transformOrigin: `${Math.random() > 0.5 ? sparkleAnim.RANDOM(30, 80) * -10 : sparkleAnim.RANDOM(30, 80) * 10}% ${\r\n      Math.random() > 0.5 ? sparkleAnim.RANDOM(30, 80) * -10 : sparkleAnim.RANDOM(30, 80) * 10\r\n    }%`,\r\n    transition: { duration: 0.5 },\r\n  }),\r\n  anim: (i: number) => ({\r\n    scale: 1,\r\n    rotateZ: i % 2 === 0 ? [0, 360] : [-360, 0],\r\n    opacity: sparkleAnim.RANDOM(5, 8) / 10,\r\n    transition: {\r\n      opacity: { duration: 1, ease: \"anticipate\" },\r\n      scale: { duration: 2, ease: \"anticipate\" },\r\n      ease: \"linear\",\r\n      delay: sparkleAnim.RANDOM(1, 10) * -1,\r\n      duration: sparkleAnim.RANDOM(10, 25),\r\n      repeat: Infinity,\r\n    },\r\n  }),\r\n};\r\n","import { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  buttonAnim,\r\n  highlightContainerAnim,\r\n  highlightAnim,\r\n  svgAnim,\r\n  pathAnim,\r\n  labelAnim,\r\n  sparkleAnim,\r\n} from \"./Button.anim\";\r\nimport S from \"./Button.module.css\";\r\n\r\ntype ButtonProps = {\r\n  label?: string;\r\n  hueValue?: number;\r\n};\r\n\r\nexport const Button = ({ label = \"Button Text\", hueValue = 0 }: ButtonProps) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const GenerateSparkles = () => {\r\n    return Array(30)\r\n      .fill(0)\r\n      .map((_, i) => (\r\n        <motion.svg\r\n          variants={sparkleAnim}\r\n          key={i}\r\n          custom={i}\r\n          viewBox=\"0 0 12 13\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <motion.path\r\n            animate={{ rotate: 360 }}\r\n            d=\"M6.657 1.247C6.767 0.917 7.233 0.917 7.343 1.247L7.988 3.184C8.12997 3.6098 8.36917 3.99668 8.68664 4.31398C9.00411 4.63127 9.39112 4.87026 9.817 5.012L11.753 5.657C12.083 5.767 12.083 6.233 11.753 6.343L9.816 6.988C9.3902 7.12997 9.00332 7.36917 8.68602 7.68664C8.36873 8.00411 8.12974 8.39112 7.988 8.817L7.343 10.753C7.31929 10.8253 7.27335 10.8882 7.21176 10.9328C7.15016 10.9774 7.07605 11.0014 7 11.0014C6.92395 11.0014 6.84984 10.9774 6.78824 10.9328C6.72665 10.8882 6.68072 10.8253 6.657 10.753L6.012 8.816C5.87013 8.39031 5.63108 8.00349 5.31379 7.68621C4.99651 7.36892 4.60969 7.12987 4.184 6.988L2.247 6.343C2.17474 6.31928 2.11181 6.27335 2.0672 6.21176C2.02259 6.15016 1.99857 6.07605 1.99857 6C1.99857 5.92395 2.02259 5.84983 2.0672 5.78824C2.11181 5.72665 2.17474 5.68072 2.247 5.657L4.184 5.012C4.60969 4.87013 4.99651 4.63108 5.31379 4.31379C5.63108 3.99651 5.87013 3.60969 6.012 3.184L6.657 1.247Z\"\r\n          />\r\n        </motion.svg>\r\n      ));\r\n  };\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <motion.div initial=\"init\" animate={hover ? \"anim\" : \"init\"} className={S.sparkleContainer}>\r\n        {GenerateSparkles()}\r\n      </motion.div>\r\n      <motion.button\r\n        variants={buttonAnim}\r\n        initial=\"init\"\r\n        animate={hover ? \"anim\" : \"init\"}\r\n        whileTap=\"tap\"\r\n        onHoverStart={() => setHover(true)}\r\n        onHoverEnd={() => setHover(false)}\r\n        className={S.btn}\r\n        type=\"button\"\r\n        style={{ filter: `hue-rotate(${hueValue}deg)` }}\r\n      >\r\n        <motion.div variants={highlightContainerAnim} className={S.highlightContainer}>\r\n          <motion.div variants={highlightAnim} className={S.highlight}></motion.div>\r\n        </motion.div>\r\n        <motion.svg variants={svgAnim} viewBox=\"0 0 12 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <motion.path\r\n            variants={pathAnim}\r\n            custom={1}\r\n            d=\"M6.657 1.247C6.767 0.917 7.233 0.917 7.343 1.247L7.988 3.184C8.12997 3.6098 8.36917 3.99668 8.68664 4.31398C9.00411 4.63127 9.39112 4.87026 9.817 5.012L11.753 5.657C12.083 5.767 12.083 6.233 11.753 6.343L9.816 6.988C9.3902 7.12997 9.00332 7.36917 8.68602 7.68664C8.36873 8.00411 8.12974 8.39112 7.988 8.817L7.343 10.753C7.31929 10.8253 7.27335 10.8882 7.21176 10.9328C7.15016 10.9774 7.07605 11.0014 7 11.0014C6.92395 11.0014 6.84984 10.9774 6.78824 10.9328C6.72665 10.8882 6.68072 10.8253 6.657 10.753L6.012 8.816C5.87013 8.39031 5.63108 8.00349 5.31379 7.68621C4.99651 7.36892 4.60969 7.12987 4.184 6.988L2.247 6.343C2.17474 6.31928 2.11181 6.27335 2.0672 6.21176C2.02259 6.15016 1.99857 6.07605 1.99857 6C1.99857 5.92395 2.02259 5.84983 2.0672 5.78824C2.11181 5.72665 2.17474 5.68072 2.247 5.657L4.184 5.012C4.60969 4.87013 4.99651 4.63108 5.31379 4.31379C5.63108 3.99651 5.87013 3.60969 6.012 3.184L6.657 1.247Z\"\r\n          />\r\n          <motion.path\r\n            variants={pathAnim}\r\n            custom={2}\r\n            d=\"M2.39415 8.03423C2.36334 8.05648 2.34032 8.08788 2.32838 8.12396L2.00596 9.09204C1.93505 9.30488 1.81554 9.49828 1.65691 9.65691C1.49828 9.81554 1.30488 9.93505 1.09204 10.006L0.123957 10.3284C0.0878781 10.3403 0.0564822 10.3633 0.0342297 10.3941C0.0119772 10.425 0 10.462 0 10.5C0 10.538 0.0119772 10.575 0.0342297 10.6059C0.0564822 10.6367 0.0878781 10.6597 0.123957 10.6716L1.09204 10.994C1.30488 11.0649 1.49828 11.1845 1.65691 11.3431C1.81554 11.5017 1.93505 11.6951 2.00596 11.908L2.32838 12.876C2.34032 12.9121 2.36334 12.9435 2.39415 12.9658C2.42496 12.988 2.46199 13 2.5 13C2.538 13 2.57504 12.988 2.60585 12.9658C2.63666 12.9435 2.65967 12.9121 2.67162 12.876L2.99404 11.908C3.06495 11.6951 3.18446 11.5017 3.34309 11.3431C3.50172 11.1845 3.69512 11.0649 3.90796 10.994L4.87604 10.6716C4.91212 10.6597 4.94352 10.6367 4.96577 10.6059C4.98802 10.575 5 10.538 5 10.5C5 10.462 4.98802 10.425 4.96577 10.3941C4.94352 10.3633 4.91212 10.3403 4.87604 10.3284L3.90796 10.006C3.47641 9.86183 3.13817 9.52359 2.99404 9.09204L2.67162 8.12396C2.65967 8.08788 2.63666 8.05648 2.60585 8.03423C2.57504 8.01198 2.538 8 2.5 8C2.46199 8 2.42496 8.01198 2.39415 8.03423Z\"\r\n          />\r\n          <motion.path\r\n            variants={pathAnim}\r\n            custom={3}\r\n            d=\"M2.4365 0.0201631C2.41807 0.0332787 2.40418 0.0518105 2.39677 0.0731818L2.20383 0.654117C2.11749 0.913811 1.91404 1.11721 1.65428 1.20353L1.0732 1.39717C1.05182 1.40458 1.03329 1.41847 1.02017 1.4369C1.00705 1.45532 1 1.47738 1 1.5C1 1.52262 1.00705 1.54468 1.02017 1.5631C1.03329 1.58153 1.05182 1.59542 1.0732 1.60283L1.65353 1.79647C1.78154 1.83905 1.89786 1.91087 1.99326 2.00624C2.08865 2.10161 2.16049 2.2179 2.20308 2.34588L2.39677 2.92682C2.40418 2.94819 2.41807 2.96672 2.4365 2.97984C2.45494 2.99295 2.477 3 2.49962 3C2.52225 3 2.54431 2.99295 2.56275 2.97984C2.58118 2.96672 2.59507 2.94819 2.60248 2.92682L2.79617 2.34588C2.83876 2.2179 2.9106 2.10161 3.00599 2.00624C3.10139 1.91087 3.21771 1.83905 3.34572 1.79647L3.9268 1.60283C3.94818 1.59542 3.96671 1.58153 3.97983 1.5631C3.99295 1.54468 4 1.52262 4 1.5C4 1.47738 3.99295 1.45532 3.97983 1.4369C3.96671 1.41847 3.94818 1.40458 3.9268 1.39717L3.34572 1.20353C3.08596 1.11721 2.88251 0.913811 2.79617 0.654117L2.60248 0.0731818C2.59507 0.0518105 2.58118 0.0332787 2.56275 0.0201631C2.54431 0.00704757 2.52225 0 2.49962 0C2.477 0 2.45494 0.00704757 2.4365 0.0201631Z\"\r\n          />\r\n        </motion.svg>\r\n        <motion.span variants={labelAnim}>{label}</motion.span>\r\n      </motion.button>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","__name","reactJsxRuntime_production_min","module","MotionConfigContext","createContext","MotionContext","PresenceContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","visualElement","useInsertionEffect","isRefObject","ref","useMotionRef","externalRef","useCallback","instance","isVariantLabel","v","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","name","isVariantNode","getCurrentTreeVariants","context","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","featureProps","featureDefinitions","key","loadFeatures","features","useConstant","init","globalProjectionState","id","useProjectionId","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","isStatic","projectionId","initialLayoutGroupConfig","isStrict","React.createElement","ForwardRefComponent","forwardRef","layoutId","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","layout","isMotionValue","value","translateAlias","numTransforms","buildTransform","transform","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","i","transformName","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","clamp","min","max","number","alpha","scale","sanitize","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","renderHTML","element","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","targetKey","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","index","svgMotionConfig","htmlMotionConfig","createDomMotionConfig","addDomEvent","eventName","handler","isPrimaryPointer","event","extractEventInfo","pointType","addPointerInfo","addPointerEvent","combineFunctions","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","step","callback","keepAlive","immediate","addToCurrentFrame","buffer","frameData","maxElapsed","useDefaultElapsed","stepsOrder","steps","acc","sync","process","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","timestamp","addHoverEvent","isActive","callbackName","handleEvent","info","HoverGesture","FocusGesture","isFocusVisible","isNodeOrChild","child","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PressGesture","startEvent","startInfo","removePointerUpListener","endEvent","endInfo","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","handleKeydown","keydownEvent","handleKeyup","keyupEvent","removeKeydownListener","handleBlur","removeBlurListener","onTapStart","whileTap","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","shallowCompare","next","prev","prevLength","getCurrent","current","getVelocity","velocity","resolveVariant","optimizedAppearDataId","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isWaapiSupportedEasing","easing","supportedWaapiEasing","cubicBezierAsString","mapEasingToNativeEasing","animateStyle","valueName","keyframes","delay","duration","repeat","repeatType","ease","times","keyframeOptions","featureTests","results","supports","getFinalKeyframe","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","t","easeIn","easeOut","easeInOut","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","hex","hsla","hue","saturation","lightness","color","mix","from","to","progress","hueToRgb","hslaToRgba","mixLinearColor","fromExpo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","test","_a","_b","analyseComplexValue","numColors","numNumbers","colors","numbers","parse","createTransformer","tokenised","numValues","output","convertNumbersToZero","getAnimatableNone","parsed","complex","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","detectMixerFactory","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","fillOffset","remaining","offsetProgress","defaultOffset","arr","convertOffsetToTimes","o","mirrorEasing","reverseEasing","circIn","circOut","circInOut","backOut","backIn","backInOut","anticipate","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","defaultEasing","keyframeValues","easingFunctions","absoluteTimes","mapTimeToKeyframe","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","initialGuess","approximateRoot","stiffness","rootIterations","result","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","derived","spring","restDelta","restSpeed","damping","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","types","calculateDuration","generator","timeStep","animateValue","autoplay","driver","keyframes$1","repeatDelay","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","resolveFinishedPromise","currentFinishedPromise","updateFinishedPromise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","calculatedDuration","resolvedDuration","totalDuration","time","tick","elapsed","frameGenerator","currentIteration","iterationProgress","iterationIsOdd","done","isAnimationFinished","finish","stopAnimationDriver","cancel","play","now","controls","reject","newTime","newSpeed","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","animation","safeCancel","currentTime","createInstantAnimation","delayBy","setValue","underDampedSpring","criticallyDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","getDefaultValueType","defaultValueType","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","numSubscriptions","isFloat","MotionValue","render","subscription","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","motionValue","testValueType","auto","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","setTarget","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","appearId","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateVisualElement","resolvedDefinition","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","createTypeState","AnimationFeature","prevAnimate","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","distance","distance2D","xDelta","yDelta","PanSession","handlers","transformPagePoint","getPanInfo","isPanStarted","isDistancePastThreshold","point","onStart","onMove","transformPoint","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","top","left","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","y","transformBoxPoints","topLeft","bottomRight","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","snapToDefault","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","scroll","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","isDragging","onDragEnd","_point","shouldDrag","axisValue","dragConstraints","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","usePresence","useId","pixelsToPercent","pixels","correctBorderRadius","cssVariableRegex","parseCSSVariable","match","fallback","getVariableValue","depth","resolveCSSVariables","varToken","correctBoxShadow","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","React__default","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","stack","promoteContext","safeToRemove","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","elementScaleX","elementScaleY","compareByDepth","FlatTree","timeout","start","checkElapsed","record","data","isSVGElement","animateSingleValue","motionValue$1","transformAxes","animationTarget","projectionFrameData","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","args","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetRotation","shouldNotifyListeners","clearMeasurements","mountNodeEarly","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasRotate","resetValues","styles","emptyStyles","valuesToRender","correct","applyTo","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","searchNode","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","scrollY","convertedTarget","unitConversion","parseDomVariant","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","initialMotionValues","_props","_prevProps","remove","valueIsTransform","removeOnChange","removeOnRenderRequest","other","renderedProps","ProjectionNodeConstructor","isEnabled","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","layoutScroll","layoutRoot","feature","canMutate","listener","startAtParent","closestVariantNode","valueFromInitial","DOMVisualElement","transformValues","isMounted","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","motion","buttonAnim","labelAnim","svgAnim","pathAnim","highlightContainerAnim","highlightAnim","sparkleAnim","Button","hueValue","hover","setHover","useState","GenerateSparkles","_","jsx","jsxs","S"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201]}